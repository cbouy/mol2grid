Refactored improvements
- - -
- The pages/table templates and corresponsing function have been renamed to interactive/static for clarity.
- Interactive navigation components (pagination, sort, search, select menu)
    - Removed bootstrap CSS & rebuilt components as native elements with minimal, name-spaced CSS.
    - Improved and more intuitive way of sorting.
    - Changes the text/smarts dropdown to a visual toggle.
    - Replaced the "checkbox" menu icon to a more standard triple dot menu.
    - All components are now fully responsive up until around ~415px wide (smaller usage is probably unlikely).
- The interactive grid got some UI/UX upgrades:
    - The mols2grid-id is now always displayed right next to the checkbox in the corner
    - The entire cell is now clickable (making it a lot easier to select cells)
    - Implemented basic intuitive keyboard navigation: ENTER/ESC for selecting/unselecting, arrows for navigation
    - Added new parameter 'pad' for controlling the padding of each cell
    - When parameter 'gap' is set to 0, a negative margin ensures you don't get double borders in between cells (looks a lot cleaner)
    Data parameter changes:
        - Displayed data paremeters can now be copied by clicking them
        - Data paremeters are now by default broken into multiple lines in the static grid, and only truncated in the interactive grid
        - A new parameter 'truncate' lets the user override the default truncating behavior
        - When truncate is set to false, longer values will distort the grid, causing a less structured layout but still with all data visible
- Iframe usage
    - The grid is now rendered without an iframe by default, unless the code is run inside Jupyter.
    - A new parameter 'use_iframe' has been added to override the default behavior.
    - Parameters 'width' and 'height' have been renamed to 'iframe_width' and 'iframe_height' to more clear
- Responsive interactive grid
    - Instead of specifying how many columns, you just specify a desired image size. The width is used to set a mininum cell width
    - The responsive CSS assumes results to be a multiple of 12, and will elegantly snap to 1/2/3/4/6/12 columns
    - By default, 24 results are returned. The documentation suggests sticking to multiples of 12.
    - The variable 'n_items_per_page' is now added as a parameter, replacing 'n_cols' for the interactive template
    - When 'n_items_per_page' is set to a different number, the grid will just display a gap at the end of the page
- Static grid changes
    - Instead of specifying a grid width, the user can now just specify the cell width ('size[0]') + 'n_cols'.
    - This way there's optimal overlap with how the interactive grid works.
- The tooltip has been made less intrusive:
    Interactive template:
        - Tooltip hover zone is now limited to a small (i) icon in the corner, so it is not interfering with regular browsing
        - Clicking the (i) icon also toggles the tooltip and indicates if it's on or off (easier to find where a sticky tooltip is coming from)
        - Tooltip is now controlled by js (See initToolTip in grid_interaction.js)
        - Parameter 'tooltip_trigger' has been removed
    Static template:
        - Parameter 'tooltip_trigger' default value has been set to 'focus'
        - Table cells are now focusable, so you can either click inside/outside a cell to activate/deactivate, or use TAB key to cycle through the grid
======
- Detached popup functionality from Bootstrap, simplified the HTML, "max-width: 80%" no longer needed as default styling


Small improvements
- - -
- We're now automaticlaly adding 'img' to the subset without throwing an error (Previous behavior: throw error and tell user to add it)
- Also the mols2grid-id is now always displayed no matter what
- When you download CSV or SMILES without any cells selected, it now will download data for all cells instead of an empty document
- We now default to a smaller font size (12px) so the experience out of the box is a bit more practical
- The mols SVG images are now transparent, resulting in a nicer hover state
- Added default values to all docstring parameters
- Organized the parameters into categories, and removed some description inconsistencies



Bug fixes
- - -
- Parameter 'gap' in static template didn't work
- I no longer resize the iframe if a custom iframe_height is set by the display function
    - Previous behavior: parameter was overwritten by the style tag, hence useless
    - I also removed the default height="200" because it didn't serve any purpose
- Removed the 'cell_width' parameter as it was being overwritten and not documented
- Removed from the custom_css parameter instructions 'Only available for the "interactive" template' because it's not.


Proposed Imoprovements - NOT Implemented
- - -
1. Save Smiles: When downloading the smiles, we currently list the smiles + the mols2grid-id --> would be better the other way around
    Now:
    C=CCC=C 4
    C1CC=CCC1 3
    Cc2c1ccccc1c(C)c3ccccc23 16

    Proposed:
    4	C=CCC=C
    3	C1CC=CCC1
    16	Cc2c1ccccc1c(C)c3ccccc23
2. Export as CSV: exports as a tab-delineated text, which messes with CSV preview on OSX, possibly other places as well --> use semicolon ;
3. Copy to clipboard: currently copies them as disctionary --> would copy them as tab-delineated text (per current CSV output) so you can paste directly into spreadsheet


Notes
- - -
- I replaced #searchbar with #mols2grid .searchbar to be consistent. Didn't test:
    - tests/test_interface.py: driver.find_by_css_selector("#mols2grid .searchbar") instead of driver.find_by_id("#searchbar")
    - tests/webdriver_utils.py: similar
- After removing tooltip_trigger for interactive template, test_tooltip_trigger may need to be reworked
- You'll need to add the version changes to the docstring
- I think useSVG should be reversed and renamed to use_png, but I waited with this until I know how to run the tests
    --> I learned this is mimicking RDKit functionality, though leaving the comment here perhaps as a future ux improvement to consider.
======
- The popup example in the docs used desc.amw, while the info callback uses desc.exactmw. I updated it to be in sync.
- I updated the Notebook examples so they're consistent with the new parameters (eg. remove n_cols). Make sure to test everything.


Questions
- - -
- The use_iframe parameter is used by display, but I also need it as a parameter in the to_interactive/to_static render functions (I need it inside the HTML template).
    But when I add it as a keyword parameter to to_interactive/to_static, it gets overwritten by the default value by _prepare_kwargs - render_kwargs.update.
    I solved this by using use_iframe=kwargs['use_iframe'] instead of specificallt defining it as a keyword parameter, but it's a little obscure. Any better way of doing this?
- I didn't manage to display the id without copying it (how it was initially) (See: # Make a copy of id shown explicitely) – do we have to do it like this?

- Clipboard copies data as JSON, should we also provide a JSOn download?
- Why is the default font family 'DejaVu', sans-serif? Is this font widely used in the scientific community?
- How can I run the tests?
- mols2grid.get_selection() doesn't return anything?
======
- What's the purpose of the height parameter for show_3d?
- Is adding the data-cellstyle="0" necessary? Works fine without and should do so anywhere I think? See {% if whole_cell_style %}